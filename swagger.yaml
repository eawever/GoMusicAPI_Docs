openapi: 3.0.3
info:
  title: Music Ratings API
  description: API for managing music ratings, including CRUD operations, authentication, and individual album pages.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /albums:
    get:
      summary: List all albums
      responses:
        '200':
          description: A list of albums
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
    post:
      summary: Add a new album
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
      responses:
        '201':
          description: Album created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
  /albums/{albumId}:
    get:
      summary: Retrieve album details
      parameters:
        - name: albumId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Album details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
    put:
      summary: Update an album
      parameters:
        - name: albumId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
      responses:
        '200':
          description: Album updated
    delete:
      summary: Delete an album
      parameters:
        - name: albumId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Album deleted
  /albums/{albumId}/ratings:
    get:
      summary: List ratings for an album
      parameters:
        - name: albumId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of ratings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
    post:
      summary: Add a rating to an album
      parameters:
        - name: albumId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          description: Rating added
  /albums/{albumId}/page:
    get:
      summary: View album details and ratings
      parameters:
        - name: albumId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Album page
          content:
            application/json:
              schema:
                type: object
                properties:
                  album:
                    $ref: '#/components/schemas/Album'
                  ratings:
                    type: array
                    items:
                      $ref: '#/components/schemas/RatingDetail'
  /ratings/{ratingId}:
    get:
      summary: Retrieve rating details
      parameters:
        - name: ratingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rating details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingDetail'
  /auth/login:
    post:
      summary: Mock login system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Mock session token
        '401':
          description: Invalid credentials
components:
  schemas:
    Album:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        artist:
          type: string
        yearOfRelease:
          type: integer
    Rating:
      type: object
      properties:
        id:
          type: string
        albumId:
          type: string
        userId:
          type: string
        score:
          type: number
          format: float
          description: Must be in increments of 0.5
        weight:
          type: number
          format: float
          description: Rounded to two decimal places
    RatingDetail:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
          description: Display name for the user
        score:
          type: number
          format: float
        stars:
          type: string
          description: Visual star representation (e.g., "★★★★☆")
        weight:
          type: number
          format: float
        comment:
          type: string
          description: Optional user comment